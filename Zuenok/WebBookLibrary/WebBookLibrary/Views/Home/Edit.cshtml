@using WebBookLibrary.Models.LibraryModels
@model WebBookLibrary.Models.LibraryModels.Book

@{
    ViewBag.Title = "Edit";
}

<div class="bg-color-dark">
    <h2> Adding a new edition of the book. </h2>
</div>

@using (Html.BeginForm("Edit", "Home", FormMethod.Post, new {@class = "form-horizontal"}))
{
    @Html.AntiForgeryToken()

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="container-fluid bg-color-light">
                    <hr />
                    <h4>Edit book</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-inline">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, new { @class = "control-label col-sm-2" })
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Author, new { @class = "control-label col-md-2" })
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                        <div class="col-sm-2">
                            @Html.TextAreaFor(model => model.Description, 3, 50, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Created, new { @class = "control-label col-md-2" })
                        <div class="col-sm-2">
                            <input type="date" name="Created" class="form-control" />
                        </div>
                    </div>

                    <div class="form-inline">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Genre, new { @class = "control-label col-md-2" })
                            <div class="col-sm-2">
                                @Html.DropDownListFor(model => model.Genre, new SelectList(new[] { Genre.Crime, Genre.Detective, Genre.Science, Genre.Fantasy, Genre.Romance, Genre.Other }), new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Languages, new { @class = "control-label col-md-2" })
                            <div class="col-sm-2">
                                @Html.ListBoxFor(model => model.Languages, new MultiSelectList(new[] { Language.English, Language.German, Language.France, Language.Russian }), new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Languages, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-inline">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsPaper, new { @class = "control-label col-md-2" })
                            <div class="col-sm-2">
                                @Html.CheckBoxFor(model => model.IsPaper, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsPaper, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeliveryRequired, new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.RadioButtonFor(model => model.DeliveryRequired, false, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DeliveryRequired, "", new { @class = "text-danger" })
                                <span>No</span>
                                @Html.RadioButtonFor(model => model.DeliveryRequired, true, new { htmlAttributes = new { @class = "form-control" } }) @Html.ValidationMessageFor(model => model.DeliveryRequired, "", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(model => model.DeliveryRequired, "", new { @class = "text-danger" })
                                <span>Yes</span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="modal-footer">
                            <div class="text-center">
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}