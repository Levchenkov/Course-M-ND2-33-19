@using Lab2.Models
@model Lab2.Models.Book

@{
    ViewBag.Title = "Add";
}
<div>
    <div class="bg-color-dark">
        <h2> Add a new book </h2>
    </div>
    @using (Html.BeginForm("Create", "Book", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Id, new { @class = "control-label col-sm-2" })
            <div class="col-sm-2">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-sm-2" })
            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Author, new { @class = "control-label col-sm-2" })
            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-sm-2" })
            <div class="col-sm-2">
                @Html.TextAreaFor(model => model.Description, 3, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Created, new { @class = "control-label col-sm-2" })
            <div class="col-sm-2">
                <input type="date" name="Created" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, new { @class = "control-label col-sm-2" })
            <div class="col-sm-2">
                @Html.DropDownListFor(model => model.Genre, new SelectList(new[] { Genre.Novel, Genre.Detective, Genre.History, Genre.Fantasy, Genre.Poem, Genre.Other }), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Languages, new { @class = "control-label col-sm-2" })
            <div class="col-sm-2">
                @Html.ListBoxFor(model => model.Languages, new MultiSelectList(new[] { Language.English, Language.Deutsch, Language.Polish, Language.Russian }), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Languages, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsPaper, new { @class = "control-label col-sm-2" })
            <div class="col-sm-2">
                @Html.CheckBoxFor(model => model.IsPaper, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsPaper, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryRequired, new { @class = "control-label col-sm-2" })
            <div class="col-sm-4">
                @Html.RadioButtonFor(model => model.DeliveryRequired, false, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveryRequired, "", new { @class = "text-danger" })
                <span>No</span>
                @Html.RadioButtonFor(model => model.DeliveryRequired, true, new { htmlAttributes = new { @class = "form-control" } }) @Html.ValidationMessageFor(model => model.DeliveryRequired, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.DeliveryRequired, "", new { @class = "text-danger" })
                <span>Yes</span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        </div>
    </div>
            }
        </div>
        <div>
            @Html.ActionLink("Back", "ViewBook")
        </div>
