@using System.Web.UI.HtmlControls
@using HeyRed.MarkdownSharp
@using System.Security.Claims
@model Http.News.Domain.Contracts.ViewModels.ItemDetailsViewModel

@*<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">*@
<link rel="stylesheet" href="~/Content/font-awesome.min.css">
<link rel="stylesheet" href="~/Content/font-awesome.min.css">
<link href="~/Content/css/star-rating.css" media="all" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="~/Content/jquery.thumbs.css">
@section topmenu {
    @Html.Partial("_TopMenu", Model.TopMenu)
}

@*@Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/Content/css")*@
@{ Markdown mark = new Markdown(); }
@*<div class="contact-us container">
        <div class="row">
            <h5>Cetegory: @Model.CategoryName</h5>
            <h5 class="card-subtitle mb-2 text-muted">@Model.ItemDetails.ShortDescription</h5>
            <div class="contact-form span7">
                <h4>@Model.ItemDetails.Title</h4>
                @Html.Raw(mark.Transform(Model.ItemDetails.Content))
            </div>
            <div class="contact-address span5">
                <img src="@Url.Content("~" + Model.ItemDetails.SmallImageUrl)" alt="@Model.ItemDetails.Title" />
            </div>
        </div>
        <h6>Created By: @Model.ItemDetails.CreatedBy</h6>
        <h6>Creation Date: @Model.ItemDetails.CreatedDate</h6>
        <h6>Modified By: @Model.ItemDetails.ModifiedBy</h6>
        <h6>Modified Date: @Model.ItemDetails.ModifiedDate</h6>
        <div>
            @Html.Partial("_Raiting", Model.ItemDetails)
        </div>
    </div>*@
<div class="main-content">
    <div class="card">
        <img class="card-img-top" src="@Url.Content("~/" + Model.ItemDetails.SmallImageUrl)" alt="@Model.ItemDetails.Title" style="width: 30rem;" />
        <div class="card-body">
            <h5 class="card-title">@Model.ItemDetails.Title</h5>
            <h6 class="card-subtitle mb-2 text-muted">Cetegory: @Model.CategoryName</h6>
            <h6 class="card-subtitle mb-2 text-muted">@Model.ItemDetails.ShortDescription</h6>
            <div class="card-text">
                @Html.Raw(mark.Transform(Model.ItemDetails.Content))
            </div>
            <h6 class="card-subtitle mb-2 text-muted">Created By: @Model.ItemDetails.CreatedBy</h6>
            <h6 class="card-subtitle mb-2 text-muted">Creation Date: @Model.ItemDetails.CreatedDate</h6>
            <h6 class="card-subtitle mb-2 text-muted">Modified By: @Model.ItemDetails.ModifiedBy</h6>
            <h6 class="card-subtitle mb-2 text-muted">Modified Date: @Model.ItemDetails.ModifiedDate</h6>
        </div>
    </div>
    <div>
        @Html.Partial("_Raiting", Model.ItemDetails)
    </div>
    <h2>Comments</h2>
    <div class="chat-panel card">
        <div class="card-header">
            Comments using SingalR
            <i class="fa fa-paper-plane fa-fw"></i>
        </div>
        <div class="card-body comments" id="chat" style="height:250px;">
            @Html.Hidden("displayname", Context.User.Identity.Name, new { id = "displayname" })
            @Html.Hidden("itemId", Model.ItemDetails.Id, new { id = "itemId" })
            <p id="discussion"></p>
        </div>
        @if (User.IsInRole("admin") || User.IsInRole("writer"))
        {
            <div class="card-footer">
                <div class="form-inline">
                    <input id="message" type="text" name="message" class="form-control" placeholder="Type your message here..." >
                    <span class="input-group-append">
                        <button class="btn btn-warning" id="sendmessage">
                            Send
                            <i class="fa fa-paper-plane"></i>
                        </button>
                    </span>
                </div>
            </div>
        }
        @*if (((ClaimsPrincipal)Context.User).HasClaim(c => c.Type == ClaimTypes.Role && (c.Value == "user" || c.Value == "admin")))
            {
                <div class="card-footer">
                    <div class="input-group">
                        <input id="message" type="text" name="message" class="form-control input-group-prepend" placeholder="Type your message here..." />
                        <span class="input-group-append">
                            <input type="button" class="btn btn-warning" id="sendmessage" value="Send">
                        </span>
                    </div>
                </div>
            }*@
    </div>
</div>

<style>
    div.card-body.comments {
        overflow: scroll;
        background: url('http://subtlepatterns.com/patterns/geometry2.png');
    }
</style>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Ссылка на библиотеку SignalR -->
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <!--Ссылка на автоматически сгенерированный скрипт хаба SignalR -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script-->
    <script src="~/Scripts/comments.js"></script>
    <script src="~/Scripts/star-rating.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.thumbs.js"></script>

    <script type="text/javascript">
    $('#starRating').rating();

    //$('.js-rating-simple').thumbs();

    @if (!User.Identity.IsAuthenticated)
    {
        @(Html.Raw("$(\".rating\").rating({ readonly: true });"));
    }

    $('#starRating').on('rating:change', function (event, value, caption) {
        var posting = $.post("@Url.Action("SetRating")", { itemId: @Model.ItemDetails.Id, ratingValue: value });
        posting.done(function (result) {
            console.log(result);
            if (result === "")
            {
                alert('You have already rated this article');
            }
            var elem = $('#starRating');
            //elem.value = result;
            //console.log(elem.rating('update', value));
            //$('#starRating').rating('update', value);
        });
    });

        var allowLike = @(User.Identity.IsAuthenticated ? "true" : "false");

        $('.jq-rating').thumbs({
            onLike: function (value) {
                if (allowLike) {
                    $('.jq-rating').find('.sprite-fa-thumbs-up-grey')
                .removeClass("sprite-fa-thumbs-up-grey")
                .toggleClass("sprite-fa-thumbs-up-green");
                                var posting = $.post('@Url.Action("SetLike")', { itemId: @Model.ItemDetails.Id });
                var likeCount = $('.jq-rating').thumbs('getLikes');
                posting.done(function(result) {
                    var likeCount = $('.jq-rating').thumbs('getLikes');
                    console.log(result);
                    if (result.HasError)
                    {
                        alert('You have already rated this article');
                    }
                    else
                    {
                        if (result.IsLiked)
                        {
                            value++;
                        $('.jq-rating').thumbs('setLikes', value);
                        }
                        else
                        {
                            value--;
                        $('.jq-rating').thumbs('setLikes', value);
                        }

                        setLikeColor(result.IsLiked);
                        alert('Thank You For Voting.');
                    }
                });
            }
                }

        });



        function setLikeColor(isLiked) {
            if (isLiked) {
                $('.jq-rating').find('.sprite-fa-thumbs-up-grey')
                    .removeClass("sprite-fa-thumbs-up-grey")
                    .addClass("sprite-fa-thumbs-up-green");
            } else {
                $('.jq-rating').find('.sprite-fa-thumbs-up-green')
                    .removeClass("sprite-fa-thumbs-up-green")
                    .addClass("sprite-fa-thumbs-up-grey");
            }
        }


    </script>
}
