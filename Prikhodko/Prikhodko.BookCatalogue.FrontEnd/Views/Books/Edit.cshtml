@model Prikhodko.BookCatalogue.FrontEnd.Models.BookViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Books"))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>BookViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Author.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.EditorFor(model => model.Author.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfIssue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfIssue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateOfIssue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsPaper, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsPaper)
                @Html.ValidationMessageFor(model => model.IsPaper, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(book => book.Genre, "What genre is this book?", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EnumDropDownListFor(book => book.Genre)
                @Html.ValidationMessageFor(book => book.Genre, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(book => book.AvailableLanguages, "What languages is book available in?", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.ListBoxFor(book => book.AvailableLanguages, new MultiSelectList(ViewBag.Languages))
                @Html.ValidationMessageFor(book => book.AvailableLanguages, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(book => book.DeliveryOption, "How should we deliver the book?", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="list-group">
                <p>
                    @Html.LabelFor(book => book.DeliveryOption, "Takeaway", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.RadioButtonFor(book => book.DeliveryOption, "Takeaway")
                    @Html.ValidationMessageFor(book => book.DeliveryOption, "", new { @class = "text-danger" })
                </p>
                <p>
                    @Html.LabelFor(book => book.DeliveryOption, "Post", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.RadioButtonFor(book => book.DeliveryOption, "Post")
                    @Html.ValidationMessageFor(book => book.DeliveryOption, "", new { @class = "text-danger" })
                </p>
                <p>
                    @Html.LabelFor(book => book.DeliveryOption, "Courier", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.RadioButtonFor(book => book.DeliveryOption, "Courier")
                    @Html.ValidationMessageFor(book => book.DeliveryOption, "", new { @class = "text-danger" })
                </p>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
