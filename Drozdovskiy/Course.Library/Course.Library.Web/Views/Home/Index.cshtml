@model IEnumerable<Course.Library.Domain.Contracts.ViewModels.BookViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Created)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AuthorFirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AuthorLastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DeliveryRequired)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsPaper)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Languages)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayTextFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorFirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorLastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeliveryRequired)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPaper)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @foreach (var language in item.Languages)
                {
                    @Html.DisplayFor(modelLanguage => language.Title)
                    @Html.Raw("</div><div class=\"row-fluid\">")
                }
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}