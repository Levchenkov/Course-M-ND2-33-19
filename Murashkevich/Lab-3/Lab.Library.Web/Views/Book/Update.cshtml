@model Lab.Library.Domain.Contracts.ViewModels.BookViewModel
@{
    ViewBag.Title = "Update";
}

<h2>Update</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>BookViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="Created" value="DateTime.Parse(Created)" required="" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedGenre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedGenre, new List<SelectListItem>()
                    {
                        new SelectListItem {Text = "Business", Value = "1"},
                        new SelectListItem {Text = "Classic", Value = "2"},
                        new SelectListItem {Text = "Detective", Value = "3", Selected = true},
                        new SelectListItem {Text = "Fantasy", Value = "4"},
                        new SelectListItem {Text = "Directories", Value = "5"},
                        new SelectListItem {Text = "Humor",Value = "6"},
                        new SelectListItem {Text = "Science", Value = "7"}
                    },
                    new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SelectedGenre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPaper, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPaper)
                    @Html.ValidationMessageFor(model => model.IsPaper, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    <label>
                        @Html.RadioButtonFor(x => x.DeliveryRequired, true)
                        Required
                    </label>
                </div>
                <div>
                    <label>
                        @Html.RadioButtonFor(x => x.DeliveryRequired, false)
                        NotRequired
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.DeliveryRequired, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedLanguages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedLanguages, new List<SelectListItem>
                {
                    new SelectListItem() {Text = "Russian",Value = "1", Selected = true},
                    new SelectListItem() {Text = "English",Value = "2", Selected = true},
                    new SelectListItem() {Text = "German",Value = "3" },
                    new SelectListItem() {Text = "Spanish",Value = "4" },
                    new SelectListItem() {Text = "Chinese",Value = "5" }
                },
                new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SelectedLanguages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}